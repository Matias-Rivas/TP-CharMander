Códigos de operación:
1: getattr
2: readdir
3: read
4: truncate
5:write
6: create
7: mkdir
8: rmdir
9: unlink
10: rename
...Puede haber más...
--------------------------------------------------------------------------------------------------------------------------------------------------
Criterios de envío: para todas las operaciones, se enviarán 2 paquetes: uno de 2 bytes, con el código de operación y el tamaño del buffer siguiente, y otro con la ruta necesaria. Si la ruta fuese mayor que el límite de mensaje impuesto, se deberá enviar un 0 en el tamaño. Límite a definir.
--------------------------------------------------------------------------------------------------------------------------------------------------
1 - getattr
El tamaño del buffer respuesta es fijo, 32 bytes.
-------------------------------------------------------------------------
2 - readdir
El servidor responde en un byte si encontró el directorio (1= sí, -1=no) con un primer mensaje, y luego todos los nombres de los archivos, enviando un mensaje de ceros si no hay más.
El tamaño máximo del buffer es 17, ya que es el máximo tamaño que puede tomar el nombre de un archivo.
-------------------------------------------------------------------------
3 - read
El cliente envía el tamaño del buffer, la cantidad de bytes a leer y el desplazamiento, cada uno representado por un su resectivo tipo (size_t - 4 bytes, y off_t - 8 bytes).
El servidor responde enviando el buffer lleno(el tamaño ya está definido por el cliente).
-------------------------------------------------------------------------
4 - truncate
El cliente envía el nuevo tamaño del archivo. De momento el servidor no devuelve nada.
-------------------------------------------------------------------------
5 - write
El cliente envía el buffer de escritura, su tamaño y el offset (mismos tamaños que en read, orden: tamaño -> offset -> buffer), y el server responde 1 si pudo escribir, o 0 si no pudo.
-------------------------------------------------------------------------
6 - create
El servidor responde con un 0 si pudo crear el archivo, o: 1 si no existe la ruta, 2 si el nombre del archivo es muy largo, 3 si ya existe el archivo y 4 si no hay espacio.
-------------------------------------------------------------------------
7 - mkdir
Mismo criterio que para create.
-------------------------------------------------------------------------
8 - rmdir
El servidor responde 0 si pudo borrar el archivo, 1 si no pudo, y 2 si es un directorio y contiene archivos.
-------------------------------------------------------------------------
9 - unlink
El servidor responde 1 si pudo borrar el archivo, o 0 si no pudo.
-------------------------------------------------------------------------
10 - rename
El cliente envía la nueva ruta que tendrá el archivo, y el servidor responde 0 si pudo moverlo, 1 si no existe el archivo, 2 si el nombre es demasiado largo, y 3 si la nueva ruta ya existe.